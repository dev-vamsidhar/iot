#include <SPI.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>
#define DHTPIN D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
const char* ssid = "realme X";
const char* password = "atheek123";

const char* mqttUserName = "KiIoFQMwIhgaFjgOLQMkNjE";
const char* clientID = "KiIoFQMwIhgaFjgOLQMkNjE";
const char* mqttPass = "vQ9BYyzTWJ80Rjg9xKRX+ZYE";
const char* writeAPIKey = "Q2RO14H5P09O27PJ";
long channelID= 1531646;

WiFiClient client;
PubSubClient mqttClient(client);
const char* server="mqtt.thingspeak.com";
unsigned long lastConnectionTime =0;
const unsigned long postingInterval = 20L * 1000L;
void reconnect()
{
char clientID[9];
while(!mqttClient.connected()){
Serial.print("Attempting MQTT connection....");
if(mqttClient.connect(clientID, mqttUserName, mqttPass)){
Serial.print("Connected with Client ID: ");
Serial.print(String(clientID));
Serial.print(", Username: ");
Serial.print(mqttUserName);
Serial.print(", Password: ");
Serial.print(mqttPass);
}else{
Serial.print("Failed, rc= ");
Serial.print(mqttClient.state());
Serial.print(" try again in 5 seconds");
delay(5000);
}
}
}
void mqttpublish(){
dht.begin();
float t=dht.readTemperature();
float h=dht.readHumidity();
String data = String("field1=" + String(t,DEC) + "&field2=" + String(h,DEC));
int length = data.length();
char msgBuffer[length];
data.toCharArray(msgBuffer, length+1);
Serial.println(msgBuffer);
String topicString = "channels/" + String(channelID) +
"/publish/"+String(writeAPIKey);
length = topicString.length();
char topicBuffer[length];
topicString.toCharArray(topicBuffer, length+1);
mqttClient.publish(topicBuffer, msgBuffer);
lastConnectionTime = millis();
}
void setup() {
// put your setup code here, to run once:
Serial.begin(9600);
int status=WL_IDLE_STATUS;
while (status != WL_CONNECTED)
{
status=WiFi.begin(ssid, password);
delay(5000);
}
Serial.println("Connected to wifi");
mqttClient.setServer(server,1883);
}
void loop() {
// put your main code here, to run repeatedly:
if(!mqttClient.connected()){
reconnect();
}
mqttClient.loop();
if(millis()-lastConnectionTime > postingInterval){
mqttpublish();
}
}